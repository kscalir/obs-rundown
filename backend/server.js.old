const express = require('express');
const cors = require('cors');
const path = require('path');
const WebSocket = require('ws');
const http = require('http');

// Import routes
const showsRouter = require('./src/routes/shows');
const episodesRouter = require('./src/routes/episodes');
const rundownRouter = require('./src/routes/rundown');

// Create Express app
const app = express();
const server = http.createServer(app);

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Mount routes
app.use('/api/shows', showsRouter);
app.use('/api/episodes', episodesRouter);
app.use('/api', rundownRouter);

// WebSocket setup
const wss = new WebSocket.Server({ server });

// Handle WebSocket connections
wss.on('connection', (ws, req) => {
  const url = new URL(req.url, 'http://localhost');
  const channel = parseInt(url.searchParams.get('channel') || '1');
  
  console.log(`WebSocket client connected to channel ${channel}`);
  
  ws.on('close', () => {
    console.log(`WebSocket client disconnected from channel ${channel}`);
  });
  
  ws.send(JSON.stringify({ type: 'connection', status: 'connected' }));
});

// Start server
const PORT = process.env.PORT || 5050;
server.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});